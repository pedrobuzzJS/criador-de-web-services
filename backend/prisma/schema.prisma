// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int       @id @default(autoincrement())
  name           String    @db.VarChar(255)
  username       String    @unique @db.VarChar(255)
  email          String    @unique @db.VarChar(255)
  email_verified Boolean   @default(false)
  password       String    @db.VarChar(255)
  remember_token String?   @db.VarChar(255)
  status_id      Int?
  status         Status?   @relation(fields: [status_id], references: [id])
  created_at     DateTime? @default(now())
  updated_at     String?   @db.VarChar(255)

  @@map("tbusuarios")
}

model Menus {
  id           Int       @id @default(autoincrement())
  nome         String    @db.VarChar(255)
  parametros   String?   @db.VarChar(255)
  rota         String?   @db.VarChar(255)
  icone        String    @db.VarChar(255)
  pai_id       Int?
  component    String?   @db.VarChar(255)
  possuifilhos Boolean   @default(false)
  ordem        Int?
  desabilitado Boolean   @default(false)
  status_id    Int
  status       Status?   @relation(fields: [status_id], references: [id])
  created_at   DateTime? @default(now())
  updated_at   DateTime?

  @@map("tbmenus")
}

model Status {
  id              Int              @id @default(autoincrement())
  nome            String           @db.VarChar(255)
  descricao       String           @db.VarChar(255)
  Menus           Menus[]
  Users           Users[]
  TipoWebServises TipoWebService[]
  Bases           Bases[]
  Tabelas         Tabelas[]
  WebServices     WebService[]
  TipoBase        TipoBases[]
  Colunas         Colunas[]
  WebServiceObj   WebServiceObj[]

  @@map("tbstatus")
}

model TipoWebService {
  id        Int     @id
  nome      String  @db.VarChar(255)
  sigla     String  @db.VarChar(255)
  descricao String  @db.VarChar(255)
  status_id Int?
  status    Status? @relation(fields: [status_id], references: [id])

  @@map("tbtipowebservices")
}

model WebService {
  id               Int                @id @default(autoincrement())
  nome             String             @db.VarChar(255)
  descricao        String             @db.VarChar(255)
  varsao           Float
  status_id        Int?
  status           Status?            @relation(fields: [status_id], references: [id])
  webserviceobj    WebServiceObj[]
  webserviceroutes WebServiceRoutes[]

  @@map("tbwebservices")
}

model WebServiceObj {
  id               Int                @id @default(autoincrement())
  obj              String             @db.VarChar(2500)
  sql              String             @db.VarChar(2500)
  webservice_id    Int
  versao           Int?
  status_id        Int?
  status           Status?            @relation(fields: [status_id], references: [id])
  webservice       WebService         @relation(fields: [webservice_id], references: [id])
  table_id         Int
  table            Tabelas            @relation(fields: [table_id], references: [id])
  webserviceroutes WebServiceRoutes[]

  @@map("tbwebserviceobj")
}

model WebServiceRoutes {
  id                Int           @id @default(autoincrement())
  webservice_id     Int
  webservice        WebService    @relation(fields: [webservice_id], references: [id])
  werbservoceobj_id Int
  webserviceobj     WebServiceObj @relation(fields: [werbservoceobj_id], references: [id])

  @@map("tbwebserviceroutes")
}

model TipoBases {
  id        Int     @id @default(autoincrement())
  nome      String  @db.VarChar(255)
  icone     String? @db.VarChar(255)
  status_id Int?
  status    Status? @relation(fields: [status_id], references: [id])

  @@map("tbtipobases")
}

model Bases {
  id            Int       @id
  nome          String    @db.VarChar(255)
  user          String    @db.VarChar(255)
  password      String    @db.VarChar(255)
  db_connection String    @db.VarChar(255)
  host          String    @db.VarChar(255)
  emp           Int
  fil           Int
  tipobase_id   Int
  url           String    @db.VarChar(255)
  ip            String    @db.VarChar(255)
  posts         Tabelas[]
  status_id     Int?
  status        Status?   @relation(fields: [status_id], references: [id])

  @@map("tbbases")
}

model Tabelas {
  id                     Int             @id @default(autoincrement())
  nome                   String          @db.VarChar(255)
  scheme                 String          @db.VarChar(255)
  base                   Bases?          @relation(fields: [base_id], references: [id])
  base_id                Int?
  status_id              Int?
  status                 Status?         @relation(fields: [status_id], references: [id])
  WebServiceObjReference WebServiceObj[]

  @@map("tbtabelas")
}

model Colunas {
  id                  Int     @id @default(autoincrement())
  nome                String  @db.VarChar(255)
  tipo                String? @db.VarChar(255)
  posicao             Int?
  nulo                String? @db.VarChar(255)
  char_max            Int?
  is_identity         String? @db.VarChar(255)
  is_self_referencing String? @db.VarChar(255)
  is_updatable        String? @db.VarChar(255)
  pk                  String? @db.VarChar(255)
  fk                  String? @db.VarChar(255)
  tabela_id           Int
  status_id           Int?
  status              Status? @relation(fields: [status_id], references: [id])

  @@map("tbcolunas")
}
